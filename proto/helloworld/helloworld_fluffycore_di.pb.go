// Code generated by protoc-gen-go-fluffycore-di. DO NOT EDIT.

package helloworld

import (
	context "context"
	di "github.com/dozm/di"
	dicontext "github.com/fluffy-bunny/fluffycore/middleware/dicontext"
	grpc "google.golang.org/grpc"
)

// IGreeterServer defines the grpc server
type IGreeterServer interface {
	GreeterServer
}

// greeterServer defines the grpc server truct
type greeterServer struct {
	UnimplementedGreeterServer
}

// RegisterFluffyCoreGreeterServer registers the fluffycore aware grpc server
func RegisterFluffyCoreGreeterServer(s *grpc.Server) {
	RegisterGreeterServer(s, &greeterServer{})
}

// SayHello...
func (s *greeterServer) SayHello(ctx context.Context, request *HelloRequest) (*HelloReply, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := di.Get[IGreeterServer](requestContainer)
	return downstreamService.SayHello(ctx, request)
}

// IGreeter2Server defines the grpc server
type IGreeter2Server interface {
	Greeter2Server
}

// greeter2Server defines the grpc server truct
type greeter2Server struct {
	UnimplementedGreeter2Server
}

// RegisterFluffyCoreGreeter2Server registers the fluffycore aware grpc server
func RegisterFluffyCoreGreeter2Server(s *grpc.Server) {
	RegisterGreeter2Server(s, &greeter2Server{})
}

// SayHello...
func (s *greeter2Server) SayHello(ctx context.Context, request *HelloRequest) (*HelloReply2, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := di.Get[IGreeter2Server](requestContainer)
	return downstreamService.SayHello(ctx, request)
}
